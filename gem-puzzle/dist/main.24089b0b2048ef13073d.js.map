{"version":3,"file":"main.24089b0b2048ef13073d.js","mappings":"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","sources":["webpack://gem-puzzle/webpack/bootstrap","webpack://gem-puzzle/webpack/runtime/global","webpack://gem-puzzle/webpack/runtime/publicPath","webpack://gem-puzzle/./src/js/control.js","webpack://gem-puzzle/./src/js/game-field.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","const controlContainer = document.createElement(\"div\");\r\nconst h1 = document.createElement(\"h1\");\r\nconst buttonStart = document.createElement(\"button\");\r\nconst scoreDivCreate = document.createElement(\"div\");\r\nconst volume = document.createElement(\"div\");\r\n\r\ncreatePanelControl();\r\n\r\nfunction createPanelControl() {\r\n  h1.innerHTML = \"Gem Puzzle\";\r\n  scoreDivCreate.classList = \"score\";\r\n  scoreDivCreate.innerHTML = `Score: 0`;\r\n  volume.classList = \"volume\";\r\n  volume.classList.add(\"mute\");\r\n  buttonStart.classList = \"button-start\";\r\n  buttonStart.innerHTML = \"start\";\r\n  controlContainer.classList = \"control-container\";\r\n  controlContainer.append(scoreDivCreate);\r\n  controlContainer.append(volume);\r\n}\r\n\r\nexport { h1, buttonStart, controlContainer };\r\n","import { h1, buttonStart, controlContainer } from \"./control\";\r\nimport click from \"../assets/sound/click.mp3\";\r\nimport error from \"../assets/sound/error.mp3\";\r\n\r\nconst body = document.querySelector(\"body\");\r\nconst main = document.createElement(\"main\");\r\nconst container = document.createElement(\"div\");\r\nconst volume = controlContainer.querySelector(\".volume\");\r\nconst values = new Array(16).fill(0).map((item, index) => {\r\n  index;\r\n});\r\nlet score = 0;\r\n\r\n//Create\r\n\r\ncreateGameField();\r\n\r\n//Position\r\n\r\nconst items = Array.from(container.querySelectorAll(\".item\"));\r\nlet matrix = getMatrix(items.map((item) => item.dataset.matrixId));\r\n\r\nsetPositionItems(matrix);\r\n\r\n//Start & Shuffle\r\n\r\nbuttonStart.addEventListener(\"click\", () => {\r\n  const shuffledArray = shuffleArray(matrix.flat());\r\n  matrix = getMatrix(shuffledArray);\r\n  setPositionItems(matrix);\r\n  const scoreDiv = document.querySelector(\".score\");\r\n  score = 0;\r\n  scoreDiv.textContent = `Score: ${score}`;\r\n  container.classList.add(\"play\");\r\n});\r\n\r\nconst blankNumber = 16;\r\ncontainer.addEventListener(\"click\", (event) => {\r\n  const buttonNode = event.target.closest(\"button\");\r\n  const buttonNumber = Number(buttonNode.dataset.matrixId);\r\n  const buttonCoords = findCoordinatesByNumber(buttonNumber, matrix);\r\n  const blankCoords = findCoordinatesByNumber(blankNumber, matrix);\r\n  const isValid = isValidForSwap(buttonCoords, blankCoords);\r\n  const scoreDiv = document.querySelector(\".score\");\r\n\r\n  if (isValid) {\r\n    swap(blankCoords, buttonCoords, matrix);\r\n    setPositionItems(matrix);\r\n    score += 1;\r\n    scoreDiv.textContent = `Score: ${score}`;\r\n    const clickItem = new Audio(click);\r\n    if (volume.classList.value != \"volume mute\") {\r\n      clickItem.play();\r\n    }\r\n  } else {\r\n    if (volume.classList.value != \"volume mute\") {\r\n      const clickItem = new Audio(error);\r\n      clickItem.play();\r\n    }\r\n  }\r\n});\r\n\r\n//Mute\r\n\r\nvolume.addEventListener(\"click\", () => {\r\n  volume.classList.toggle(\"mute\");\r\n  volume.classList.toggle(\"no-mute\");\r\n});\r\n\r\n//Functions\r\n\r\nfunction createGameField() {\r\n  main.append(h1);\r\n  main.append(controlContainer);\r\n  container.classList = \"container\";\r\n  for (let value in values) {\r\n    const button = document.createElement(\"button\");\r\n    button.classList = \"item\";\r\n    button.dataset.matrixId = Number(value) + 1;\r\n    button.innerHTML = Number(value) + 1;\r\n    container.append(button);\r\n  }\r\n  main.append(container);\r\n  main.append(buttonStart);\r\n  body.append(main);\r\n}\r\n\r\nfunction getMatrix(arr) {\r\n  const matrix = [[], [], [], []];\r\n  let x = 0;\r\n  let y = 0;\r\n  for (let i = 0; i < arr.length; i++) {\r\n    if (x >= 4) {\r\n      y++;\r\n      x = 0;\r\n    }\r\n    matrix[y][x] = arr[i];\r\n    x++;\r\n  }\r\n  return matrix;\r\n}\r\n\r\nfunction setPositionItems(matrix) {\r\n  for (let y = 0; y < matrix.length; y++) {\r\n    for (let x = 0; x < matrix[y].length; x++) {\r\n      const value = matrix[y][x];\r\n      const node = items[value - 1];\r\n      setNodeStyles(node, x, y);\r\n    }\r\n  }\r\n}\r\n\r\nfunction setNodeStyles(node, x, y) {\r\n  const shiftPs = 100;\r\n  node.style.transform = `translate3D(${x * shiftPs}%, ${y * shiftPs}%, 0)`;\r\n}\r\n\r\nfunction shuffleArray(arr) {\r\n  return arr\r\n    .map((value) => ({ value, sort: Math.random() }))\r\n    .sort((a, b) => a.sort - b.sort)\r\n    .map(({ value }) => value);\r\n}\r\n\r\nfunction findCoordinatesByNumber(number, matrix) {\r\n  for (let y = 0; y < matrix.length; y++) {\r\n    for (let x = 0; x < matrix[y].length; x++) {\r\n      if (matrix[y][x] == number) {\r\n        return { x, y };\r\n      }\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\nfunction isValidForSwap(coords1, coords2) {\r\n  const diffX = Math.abs(coords1.x - coords2.x);\r\n  const diffY = Math.abs(coords1.y - coords2.y);\r\n  return (\r\n    (diffX === 1 || diffY === 1) &&\r\n    (coords1.x === coords2.x || coords1.y === coords2.y)\r\n  );\r\n}\r\n\r\nfunction swap(coords1, coords2, matrix) {\r\n  const coords1Number = matrix[coords1.y][coords1.x];\r\n  matrix[coords1.y][coords1.x] = matrix[coords2.y][coords2.x];\r\n  matrix[coords2.y][coords2.x] = coords1Number;\r\n}\r\n"],"names":["__webpack_require__","g","globalThis","this","Function","e","window","scriptUrl","importScripts","location","document","currentScript","src","scripts","getElementsByTagName","length","Error","replace","p","controlContainer","createElement","h1","buttonStart","scoreDivCreate","volume","innerHTML","classList","add","append","body","querySelector","main","container","values","Array","fill","map","item","index","score","value","button","dataset","matrixId","Number","createGameField","items","from","querySelectorAll","matrix","getMatrix","arr","x","y","i","setPositionItems","setNodeStyles","node","style","transform","findCoordinatesByNumber","number","addEventListener","shuffledArray","flat","sort","Math","random","a","b","scoreDiv","textContent","event","coords1","coords2","diffX","diffY","buttonNode","target","closest","buttonCoords","blankCoords","isValid","abs","coords1Number","swap","clickItem","Audio","click","play","error","toggle"],"sourceRoot":""}