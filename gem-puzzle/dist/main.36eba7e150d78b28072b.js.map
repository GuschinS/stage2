{"version":3,"file":"main.36eba7e150d78b28072b.js","mappings":"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","sources":["webpack://gem-puzzle/webpack/bootstrap","webpack://gem-puzzle/webpack/runtime/global","webpack://gem-puzzle/webpack/runtime/publicPath","webpack://gem-puzzle/./src/js/control.js","webpack://gem-puzzle/./src/js/algorithm-check.js","webpack://gem-puzzle/./src/js/game-field.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","// import { timerDiv } from \"./game-field\";\r\n\r\nconst controlContainer = document.createElement(\"div\");\r\nconst h1 = document.createElement(\"h1\");\r\nconst buttonContainer = document.createElement(\"div\");\r\nconst buttonStart = document.createElement(\"button\");\r\nconst buttonStop = document.createElement(\"button\");\r\nconst scoreDivCreate = document.createElement(\"div\");\r\nconst volume = document.createElement(\"div\");\r\nconst timerDiv = document.createElement(\"div\");\r\ntimerDiv.className = \"timer-display\";\r\ntimerDiv.textContent = \"00 : 00 : 00\";\r\n\r\ncreatePanelControl();\r\n\r\nfunction createPanelControl() {\r\n  h1.innerHTML = \"Gem Puzzle\";\r\n  scoreDivCreate.classList = \"score\";\r\n  scoreDivCreate.innerHTML = `Score: 0`;\r\n  volume.classList = \"volume\";\r\n  volume.classList.add(\"mute\");\r\n  buttonContainer.classList = \"button-container stop\";\r\n\r\n  buttonStart.classList = \"button-start start\";\r\n  buttonStart.innerHTML = \"start\";\r\n  buttonStop.classList = \"button-stop display-none\";\r\n  buttonStop.innerHTML = \"pause\";\r\n  controlContainer.classList = \"control-container\";\r\n  controlContainer.append(scoreDivCreate);\r\n  controlContainer.append(volume);\r\n  controlContainer.append(timerDiv);\r\n}\r\n\r\nexport { h1, buttonStart, buttonStop, controlContainer, buttonContainer };\r\n","let check = 0;\r\n\r\nfunction checkMatrix(matrix) {\r\n  let count = 0;\r\n  let maxNumber = 16;\r\n  let row = 0;\r\n  for (let i = 0; i < matrix.length; i++) {\r\n    for (let j = 0; j < matrix[i].length; j++) {\r\n      if (Number(matrix[i][j]) === maxNumber) {\r\n        row = i + 1;\r\n      }\r\n      for (let k = [j + 1]; k < matrix[i].length; k++) {\r\n        if (Number(matrix[i][j]) > Number(matrix[i][k])) {\r\n          count++;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  check = count + row;\r\n  return check;\r\n}\r\n\r\nexport { checkMatrix, check };\r\n","import {\r\n  h1,\r\n  buttonStart,\r\n  buttonStop,\r\n  controlContainer,\r\n  buttonContainer,\r\n} from \"./control\";\r\nimport { checkMatrix, check } from \"./algorithm-check\";\r\n\r\nimport click from \"../assets/sound/click.mp3\";\r\nimport error from \"../assets/sound/error.mp3\";\r\n\r\nconst body = document.querySelector(\"body\");\r\nconst main = document.createElement(\"main\");\r\nconst container = document.createElement(\"div\");\r\nconst timerDiv = controlContainer.querySelector(\".timer-display\");\r\nconst volume = controlContainer.querySelector(\".volume\");\r\nconst values = new Array(16).fill(0).map((item, index) => {\r\n  index;\r\n});\r\nlet score = 0;\r\nlet int = null;\r\n\r\nlet [milliseconds, seconds, minutes, hours] = [0, 0, 0, 0];\r\n\r\nfunction displayTimer() {\r\n  milliseconds += 10;\r\n  if (milliseconds == 1000) {\r\n    milliseconds = 0;\r\n    seconds++;\r\n    if (seconds == 60) {\r\n      seconds = 0;\r\n      minutes++;\r\n      if (minutes == 60) {\r\n        minutes = 0;\r\n        hours++;\r\n      }\r\n    }\r\n  }\r\n  let h = hours < 10 ? \"0\" + hours : hours;\r\n  let m = minutes < 10 ? \"0\" + minutes : minutes;\r\n  let s = seconds < 10 ? \"0\" + seconds : seconds;\r\n  timerDiv.textContent = ` ${h} : ${m} : ${s}`;\r\n}\r\n\r\n//Create\r\n\r\ncreateGameField();\r\n\r\n//Position\r\n\r\nconst items = Array.from(container.querySelectorAll(\".item\"));\r\nlet matrix = getMatrix(items.map((item) => item.dataset.matrixId));\r\n\r\nsetPositionItems(matrix);\r\n\r\n//Start & Reset & Stop\r\n\r\nconst handlerStartStopReset = () => {\r\n  if (buttonStart.classList.value === \"button-start start\") {\r\n    buttonStart.classList.remove(\"start\");\r\n    buttonStart.classList.add(\"reset\");\r\n    buttonStart.textContent = \"reset\";\r\n    buttonContainer.classList.remove(\"stop\");\r\n    container.classList.add(\"play\");\r\n    buttonStop.classList.remove(\"display-none\");\r\n  } else if (buttonStart.classList.value === \"button-start\") {\r\n    buttonStart.classList.add(\"reset\");\r\n    buttonStart.textContent = \"reset\";\r\n    buttonContainer.classList.remove(\"stop\");\r\n    container.classList.add(\"play\");\r\n    buttonStop.classList.remove(\"display-none\");\r\n  }\r\n};\r\n\r\n//Stop\r\n\r\nbuttonStop.addEventListener(\"click\", () => {\r\n  buttonStart.classList.remove(\"reset\");\r\n  buttonStart.textContent = \"start\";\r\n  buttonStop.classList.add(\"display-none\");\r\n  buttonContainer.classList.add(\"stop\");\r\n  container.classList.remove(\"play\");\r\n  clearInterval(int);\r\n});\r\n\r\n//Start & Shuffle\r\n\r\nbuttonStart.addEventListener(\"click\", () => {\r\n  if (buttonStart.classList.value === \"button-start\") {\r\n    if (int !== null) {\r\n      clearInterval(int);\r\n      handlerStartStopReset();\r\n    }\r\n    int = setInterval(displayTimer, 10);\r\n  } else if (\r\n    buttonStart.classList.value === \"button-start reset\" ||\r\n    buttonStart.classList.value === \"button-start start\"\r\n  ) {\r\n    handlerStartStopReset();\r\n    const shuffledArray = shuffleArray(matrix.flat());\r\n    matrix = getMatrix(shuffledArray);\r\n    checkMatrix(matrix);\r\n    while (check % 2 != 0) {\r\n      const shuffledArray = shuffleArray(matrix.flat());\r\n      matrix = getMatrix(shuffledArray);\r\n      checkMatrix(matrix);\r\n    }\r\n    setPositionItems(matrix);\r\n    if (int !== null) {\r\n      clearInterval(int);\r\n      [milliseconds, seconds, minutes, hours] = [0, 0, 0, 0];\r\n    }\r\n    int = setInterval(displayTimer, 10);\r\n    const scoreDiv = document.querySelector(\".score\");\r\n    score = 0;\r\n    scoreDiv.textContent = `Score: ${score}`;\r\n    container.classList.add(\"play\");\r\n  }\r\n});\r\n\r\nconst blankNumber = 16;\r\ncontainer.addEventListener(\"click\", (event) => {\r\n  const buttonNode = event.target.closest(\"button\");\r\n  const buttonNumber = Number(buttonNode.dataset.matrixId);\r\n  const buttonCoords = findCoordinatesByNumber(buttonNumber, matrix);\r\n  const blankCoords = findCoordinatesByNumber(blankNumber, matrix);\r\n  const isValid = isValidForSwap(buttonCoords, blankCoords);\r\n  const scoreDiv = document.querySelector(\".score\");\r\n  const endArray = [\r\n    \"1\",\r\n    \"2\",\r\n    \"3\",\r\n    \"4\",\r\n    \"5\",\r\n    \"6\",\r\n    \"7\",\r\n    \"8\",\r\n    \"9\",\r\n    \"10\",\r\n    \"11\",\r\n    \"12\",\r\n    \"13\",\r\n    \"14\",\r\n    \"15\",\r\n    \"16\",\r\n  ];\r\n  if (isValid) {\r\n    swap(blankCoords, buttonCoords, matrix);\r\n    setPositionItems(matrix);\r\n    score += 1;\r\n    scoreDiv.textContent = `Score: ${score}`;\r\n    const clickItem = new Audio(click);\r\n\r\n    if (JSON.stringify(endArray) == JSON.stringify(matrix.flat())) {\r\n      console.log(\"HURRRAAA!!!! Jesteś zwyczącą!!!\");\r\n    }\r\n    if (volume.classList.value != \"volume mute\") {\r\n      clickItem.play();\r\n    }\r\n  } else {\r\n    if (volume.classList.value != \"volume mute\") {\r\n      const clickItem = new Audio(error);\r\n      clickItem.play();\r\n    }\r\n  }\r\n});\r\n\r\n//Mute\r\n\r\nvolume.addEventListener(\"click\", () => {\r\n  volume.classList.toggle(\"mute\");\r\n  volume.classList.toggle(\"no-mute\");\r\n});\r\n\r\n//Functions\r\n\r\nfunction createGameField() {\r\n  main.append(h1);\r\n  main.append(controlContainer);\r\n  container.classList = \"container\";\r\n  for (let value in values) {\r\n    const button = document.createElement(\"button\");\r\n    button.classList = \"item\";\r\n    button.dataset.matrixId = Number(value) + 1;\r\n    button.innerHTML = Number(value) + 1;\r\n    container.append(button);\r\n  }\r\n  main.append(container);\r\n  main.append(buttonContainer);\r\n  buttonContainer.append(buttonStart);\r\n  buttonContainer.append(buttonStop);\r\n\r\n  body.append(main);\r\n}\r\n\r\nfunction getMatrix(arr) {\r\n  const matrix = [[], [], [], []];\r\n  let x = 0;\r\n  let y = 0;\r\n  for (let i = 0; i < arr.length; i++) {\r\n    if (x >= 4) {\r\n      y++;\r\n      x = 0;\r\n    }\r\n    matrix[y][x] = arr[i];\r\n    x++;\r\n  }\r\n  return matrix;\r\n}\r\n\r\nfunction setPositionItems(matrix) {\r\n  for (let y = 0; y < matrix.length; y++) {\r\n    for (let x = 0; x < matrix[y].length; x++) {\r\n      const value = matrix[y][x];\r\n      const node = items[value - 1];\r\n      setNodeStyles(node, x, y);\r\n    }\r\n  }\r\n}\r\n\r\nfunction setNodeStyles(node, x, y) {\r\n  const shiftPs = 100;\r\n  node.style.transform = `translate3D(${x * shiftPs}%, ${y * shiftPs}%, 0)`;\r\n}\r\n\r\nfunction shuffleArray(arr) {\r\n  return arr\r\n    .map((value) => ({ value, sort: Math.random() }))\r\n    .sort((a, b) => a.sort - b.sort)\r\n    .map(({ value }) => value);\r\n}\r\n\r\nfunction findCoordinatesByNumber(number, matrix) {\r\n  for (let y = 0; y < matrix.length; y++) {\r\n    for (let x = 0; x < matrix[y].length; x++) {\r\n      if (matrix[y][x] == number) {\r\n        return { x, y };\r\n      }\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\nfunction isValidForSwap(coords1, coords2) {\r\n  const diffX = Math.abs(coords1.x - coords2.x);\r\n  const diffY = Math.abs(coords1.y - coords2.y);\r\n  return (\r\n    (diffX === 1 || diffY === 1) &&\r\n    (coords1.x === coords2.x || coords1.y === coords2.y)\r\n  );\r\n}\r\n\r\nfunction swap(coords1, coords2, matrix) {\r\n  const coords1Number = matrix[coords1.y][coords1.x];\r\n  matrix[coords1.y][coords1.x] = matrix[coords2.y][coords2.x];\r\n  matrix[coords2.y][coords2.x] = coords1Number;\r\n}\r\n"],"names":["__webpack_require__","g","globalThis","this","Function","e","window","scriptUrl","importScripts","location","document","currentScript","src","scripts","getElementsByTagName","length","Error","replace","p","controlContainer","createElement","h1","buttonContainer","buttonStart","buttonStop","scoreDivCreate","volume","timerDiv","className","textContent","innerHTML","classList","add","append","check","checkMatrix","matrix","count","row","i","j","Number","k","body","querySelector","main","container","values","Array","fill","map","item","index","score","int","milliseconds","seconds","minutes","hours","displayTimer","h","m","s","value","button","dataset","matrixId","createGameField","items","from","querySelectorAll","getMatrix","setPositionItems","handlerStartStopReset","remove","arr","x","y","setNodeStyles","node","style","transform","shuffleArray","sort","Math","random","a","b","findCoordinatesByNumber","number","addEventListener","clearInterval","setInterval","shuffledArray","flat","scoreDiv","event","coords1","coords2","diffX","diffY","buttonNode","target","closest","buttonCoords","blankCoords","isValid","abs","coords1Number","swap","clickItem","Audio","click","JSON","stringify","console","log","play","error","toggle"],"sourceRoot":""}